{
  "_args": [
    [
      {
        "raw": "react-event-timeline@^1.4.1",
        "scope": null,
        "escapedName": "react-event-timeline",
        "name": "react-event-timeline",
        "rawSpec": "^1.4.1",
        "spec": ">=1.4.1 <2.0.0",
        "type": "range"
      },
      "/home/diana/Desktop/frontdeals"
    ]
  ],
  "_from": "react-event-timeline@>=1.4.1 <2.0.0",
  "_id": "react-event-timeline@1.4.1",
  "_inCache": true,
  "_location": "/react-event-timeline",
  "_nodeVersion": "6.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-event-timeline-1.4.1.tgz_1511412956786_0.8643549904227257"
  },
  "_npmUser": {
    "name": "rcdexta",
    "email": "rc.chandru@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-event-timeline@^1.4.1",
    "scope": null,
    "escapedName": "react-event-timeline",
    "name": "react-event-timeline",
    "rawSpec": "^1.4.1",
    "spec": ">=1.4.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-event-timeline/-/react-event-timeline-1.4.1.tgz",
  "_shasum": "8c4c058e71e249c65725bdfcff3297fb6e7c14a4",
  "_shrinkwrap": null,
  "_spec": "react-event-timeline@^1.4.1",
  "_where": "/home/diana/Desktop/frontdeals",
  "author": {
    "name": "RC"
  },
  "bugs": {
    "url": "https://github.com/rcdexta/react-event-timeline/issues"
  },
  "config": {
    "commitizen": {
      "path": "node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "prop-types": "^15.6.0"
  },
  "description": "A responsive event timeline in React.js",
  "devDependencies": {
    "@storybook/addon-info": "^3.2.12",
    "@storybook/addon-options": "^3.2.12",
    "@storybook/cli": "^3.2.12",
    "@storybook/react": "^3.2.12",
    "@storybook/storybook-deployer": "^2.0.0",
    "autoprefixer": "^6.4.1",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-plugin-transform-object-rest-spread": "^6.8.0",
    "babel-preset-es2015": "^6.14.0",
    "babel-preset-react": "^6.11.1",
    "chai": "^3.5.0",
    "chai-enzyme": "^0.5.2",
    "codecov.io": "^0.1.6",
    "commitizen": "^2.8.6",
    "cz-conventional-changelog": "^1.2.0",
    "enzyme": "^2.4.1",
    "eslint": "^3.7.1",
    "eslint-config-standard": "^6.2.0",
    "eslint-config-standard-react": "^4.2.0",
    "eslint-plugin-promise": "^2.0.1",
    "eslint-plugin-react": "^6.3.0",
    "eslint-plugin-standard": "^2.0.1",
    "eventsource-polyfill": "^0.9.6",
    "extract-text-webpack-plugin": "^1.0.1",
    "isparta": "^4.0.0",
    "istanbul": "^1.1.0-alpha.1",
    "jsdom": "^9.6.0",
    "mocha": "^3.1.0",
    "node-sass": "^3.10.1",
    "react": "^16.0.0",
    "react-addons-test-utils": "^15.3.2",
    "react-dom": "^16.0.0",
    "rimraf": "^2.5.4",
    "sass-loader": "^4.0.2",
    "semantic-release": "^6.3.6",
    "sinon": "^1.17.6"
  },
  "directories": {},
  "dist": {
    "shasum": "8c4c058e71e249c65725bdfcff3297fb6e7c14a4",
    "tarball": "https://registry.npmjs.org/react-event-timeline/-/react-event-timeline-1.4.1.tgz"
  },
  "files": [
    "src",
    "dist",
    "README"
  ],
  "gitHead": "2380c7765f92771935a1e0c8c1ef6599454eacc7",
  "homepage": "https://github.com/rcdexta/react-event-timeline",
  "jsnext:main": "components/index.js",
  "keywords": [
    "react",
    "timeline",
    "notification"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "rcdexta",
      "email": "rc.chandru@gmail.com"
    }
  ],
  "module": "components/index.js",
  "name": "react-event-timeline",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">= 0.14.0 < 17.0.0-0"
  },
  "readme": "# react-event-timeline\n\nA react component to generate responsive event timeline.\n\n[![npm version](https://badge.fury.io/js/react-event-timeline.svg)](https://badge.fury.io/js/react-event-timeline)\n[![Build Status](https://travis-ci.org/rcdexta/react-event-timeline.svg?branch=master)](https://travis-ci.org/rcdexta/react-event-timeline)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg)](https://github.com/rcdexta/react-event-timeline/blob/master/LICENSE.md)\n\n![alt tag](https://github.com/rcdexta/react-event-timeline/raw/master/timeline.png)\n\nSee the storybook demo here: https://rcdexta.github.io/react-event-timeline\n\n## Features\n\n* It's lightweight\n* Responsive and extensible\n\n## Getting started\n\nTo install the dependency \n```\nnpm install --save react-event-timeline\n```\nor if you use `yarn`\n```\nyarn add react-event-timeline\n```\n\n## Usage\n\nThe following snippet generates the timeline you see in the screenshot:\n\n```jsx\nimport {Timeline, TimelineEvent} from 'react-event-timeline'\n\nReactDOM.render(\n    <Timeline>\n            <TimelineEvent title=\"John Doe sent a SMS\"\n                           createdAt=\"2016-09-12 10:06 PM\"\n                           icon={<i className=\"material-icons md-18\">textsms</i>}\n            >\n                I received the payment for $543. Should be shipping the item within a couple of hours.\n            </TimelineEvent>\n            <TimelineEvent\n                title=\"You sent an email to John Doe\"\n                createdAt=\"2016-09-11 09:06 AM\"\n                icon={<i className=\"material-icons md-18\">email</i>}\n            >\n                Like we talked, you said that you would share the shipment details? This is an urgent order and so I\n                    am losing patience. Can you expedite the process and pls do share the details asap. Consider this a\n                    gentle reminder if you are on track already!\n            </TimelineEvent>\n    </Timeline>,\n      document.getElementById('container')\n);\n```\n\nPlease refer to [story description](https://github.com/rcdexta/react-event-timeline/blob/master/stories/App.story.js) to check out code for all the examples in the storybook\n\n## API Documentation\n\n### Timeline\n\nThis is the wrapper component that creates the infinite vertical timeline\n\n| Name      | Type   | Description                              |\n| --------- | ------ | ---------------------------------------- |\n| className | string | The css class name of timeline container|\n| style     | object | Override inline styles of timeline container |\n\n### TimelineEvent\n\nEach event in the timeline will be represented by the `TimelineEvent` component. There can be multiple repeating instances of this component inside `Timeline` wrapper\n\n| Name         | Type   | Description                              |\n| ------------ | ------ | ---------------------------------------- |\n| title        | node   | The title of the event. Can be string or any DOM element node(s) |\n| createdAt    | node   | The time at which the event occurred. Can be datetime string or any DOM element node(s) |\n| subtitle     | node   | If you prefer having the title at the top and some caption below, omit createdAt and specify title and subtitle |\n| icon         | node   | The icon to show as event lable. Can be a SVG or font icon |\n| iconStyle    | object   | Custom CSS styling for the icon                  |\n| bubbleStyle  | object  | Custom CSS styling for the bubble containing the icon |\n| buttons      | node   | Action buttons to display to the right of the event content |\n| contentStyle | node   | Override content style                   |\n| container    | string | Optional value `card` will render event as a Card |\n| style        | object   | Override style for the entire event container. Can be used to modify card appearance if container is selected as `card` |\n| titleStyle   | object   | Override style for the title content |\n| subtitleStyle | object | Override style for the subtitle content |\n| cardHeaderStyle | object | Override style for the card header if container is `card` |\n\n### TimelineBlip\n\nUse this component if your event footprint is too small and can be described in a single line\n\n| Name      | Type   | Description                              |\n| --------- | ------ | ---------------------------------------- |\n| title     | node   | The title of the event. Can be string or any DOM element node(s) |\n| icon      | node   | The icon to show as event lable. Can be a SVG or font icon |\n| iconColor | string | CSS color code for icon                  |\n| iconStyle | object   | Custom CSS styling for the icon                  |\n| style     | object   | Override style for the entire event container |\n\nRefer to Condensed Timeline in Storybook for examples of using this component\n\n\n## Development\n\nThis project recommends using [react-storybook](https://github.com/kadirahq/react-storybook) as a UI component development environment. Use the following scripts for your development workflow:\n\n1. `yarn storybook`: Start developing by using storybook\n2. `yarn lint` : Lint all js files\n3. `yarn lintfix` : fix linting errors of all js files\n4. `yarn build`: transpile all ES6 component files into ES5(commonjs) and put it in `dist` directory\n5. `yarn docs`: create static build of storybook in `docs` directory that can be used for github pages\n\nThe storybook artefacts can be found in `stories` folder. Run `npm run storybook` and you should see your code changes live reloaded on the browser\n\nAlso use [semantic-release](https://github.com/semantic-release/semantic-release) to automate release to npm. Use `npm run commit` to commit your changes and then `npm run semantic-release` to automate deployment and publishing to npm repository. \n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rcdexta/react-event-timeline.git"
  },
  "scripts": {
    "build": "babel components --out-dir dist",
    "commit": "git cz",
    "deploy-storybook": "storybook-to-ghpages",
    "docs": "build-storybook -o docs",
    "lint": "eslint components/** tests/**",
    "lintfix": "eslint --fix components/** tests/**",
    "prepublish": "npm run lint && npm run build",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "storybook": "start-storybook -p 9002",
    "test": "mocha --require tests/config/setup 'tests/**/*.test.js'",
    "test:cover": "istanbul cover -x *.test.js _mocha -- -R spec --require tests/config/setup 'tests/**/*.test.js'",
    "test:watch": "mocha --require tests/config/setup 'tests/**/*.test.js' --watch"
  },
  "version": "1.4.1"
}
