{
  "_args": [
    [
      {
        "raw": "react-bootstrap-date-picker@^5.0.1",
        "scope": null,
        "escapedName": "react-bootstrap-date-picker",
        "name": "react-bootstrap-date-picker",
        "rawSpec": "^5.0.1",
        "spec": ">=5.0.1 <6.0.0",
        "type": "range"
      },
      "/home/diana/Desktop/frontdeals"
    ]
  ],
  "_from": "react-bootstrap-date-picker@>=5.0.1 <6.0.0",
  "_id": "react-bootstrap-date-picker@5.1.0",
  "_inCache": true,
  "_location": "/react-bootstrap-date-picker",
  "_nodeVersion": "8.1.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-bootstrap-date-picker-5.1.0.tgz_1501544973353_0.778499515959993"
  },
  "_npmUser": {
    "name": "pushtell",
    "email": "help@pushtell.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-bootstrap-date-picker@^5.0.1",
    "scope": null,
    "escapedName": "react-bootstrap-date-picker",
    "name": "react-bootstrap-date-picker",
    "rawSpec": "^5.0.1",
    "spec": ">=5.0.1 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-bootstrap-date-picker/-/react-bootstrap-date-picker-5.1.0.tgz",
  "_shasum": "5f87c6a875e411dbf46d2be74960756f113ebf23",
  "_shrinkwrap": null,
  "_spec": "react-bootstrap-date-picker@^5.0.1",
  "_where": "/home/diana/Desktop/frontdeals",
  "author": "",
  "bugs": {
    "url": "https://github.com/pushtell/react-bootstrap-date-picker/issues"
  },
  "dependencies": {},
  "description": "React-Bootstrap based date picker.",
  "devDependencies": {
    "assert": "^1.4.1",
    "babel": "^6.23.0",
    "babel-cli": "^6.24.0",
    "babel-eslint": "^7.2.0",
    "babel-loader": "^6.4.1",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-preset-es2015": "^6.24.0",
    "babel-preset-react": "^6.23.0",
    "babel-preset-stage-1": "^6.22.0",
    "co": "^4.6.0",
    "create-react-class": "^15.5.2",
    "doctoc": "^1.3.0",
    "envify": "^4.0.0",
    "es6-promise": "^4.1.0",
    "eslint": "^3.18.0",
    "eslint-loader": "1.6.3",
    "eslint-plugin-react": "^6.10.3",
    "expose-loader": "^0.7.3",
    "isparta-loader": "^2.0.0",
    "karma": "^1.5.0",
    "karma-browserstack-launcher": "^1.2.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-coverage": "^1.1.1",
    "karma-coveralls": "^1.1.2",
    "karma-firefox-launcher": "^1.0.1",
    "karma-mocha": "^1.3.0",
    "karma-safari-launcher": "^1.0.0",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^2.0.3",
    "mocha": "^3.2.0",
    "mocha-babel": "^3.0.3",
    "node-uuid": "^1.4.7",
    "prop-types": "^15.5.8",
    "react": "^15.5.4",
    "react-bootstrap": "^0.31.0",
    "react-dom": "^15.5.4",
    "regenerator": "^0.8.46",
    "regenerator-loader": "^3.1.0",
    "transform-loader": "^0.2.4",
    "webpack": "^2.2.1",
    "webpack-dev-server": "^2.4.2"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "5f87c6a875e411dbf46d2be74960756f113ebf23",
    "tarball": "https://registry.npmjs.org/react-bootstrap-date-picker/-/react-bootstrap-date-picker-5.1.0.tgz"
  },
  "gitHead": "0ead346c1a3ab538cd3d1b02936a9020e4d4df24",
  "homepage": "https://github.com/pushtell/react-bootstrap-date-picker#readme",
  "keywords": [
    "react",
    "react-component",
    "react-bootstrap",
    "bootstrap",
    "date picker",
    "calendar",
    "date",
    "picker"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "pushtell",
      "email": "help@pushtell.com"
    }
  ],
  "name": "react-bootstrap-date-picker",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">=0.14.0",
    "react-bootstrap": "^0.31.0"
  },
  "readme": "# React-Bootstrap based date picker.\n\n[![NPM Version](https://badge.fury.io/js/react-bootstrap-date-picker.svg)](https://www.npmjs.com/package/react-bootstrap-date-picker)\n[![Circle CI](https://circleci.com/gh/pushtell/react-bootstrap-date-picker.svg?style=shield)](https://circleci.com/gh/pushtell/react-bootstrap-date-picker)\n[![Coverage Status](https://coveralls.io/repos/pushtell/react-bootstrap-date-picker/badge.svg?branch=master&service=github)](https://coveralls.io/github/pushtell/react-bootstrap-date-picker?branch=master)\n[![Dependency Status](https://david-dm.org/pushtell/react-bootstrap-date-picker.svg)](https://david-dm.org/pushtell/react-bootstrap-date-picker)\n[![NPM Downloads](https://img.shields.io/npm/dm/react-bootstrap-date-picker.svg?style=flat)](https://www.npmjs.com/package/react-bootstrap-date-picker)\n\nSee the demo at [pushtell.github.io/react-bootstrap-date-picker](http://pushtell.github.io/react-bootstrap-date-picker/).\n\n[![Demo](https://cdn.rawgit.com/pushtell/react-bootstrap-date-picker/master/documentation-images/date-picker-screencast.gif)](http://pushtell.github.io/react-bootstrap-date-picker/)\n\nPlease [★ on GitHub](https://github.com/pushtell/react-bootstrap-date-picker)!\n\nUsing this module in production? [We'd love to hear about it.](https://github.com/pushtell/react-bootstrap-date-picker/issues/17)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n<h1>Table of Contents</h1>\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [API Reference](#api-reference)\n  - [`<DatePicker />`](#datepicker-)\n- [Tests](#tests)\n  - [Browser Coverage](#browser-coverage)\n  - [Running Tests](#running-tests)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\n`react-bootstrap-date-picker` is compatible with React 0.14.x and 0.15.x.\n\n```bash\nnpm install react-bootstrap-date-picker\n```\n\n## Usage\n\n```js\nvar DatePicker = require(\"react-bootstrap-date-picker\");\n\nvar App = React.createClass({\n  getInitialState: function(){\n    var value = new Date().toISOString();\n    return {\n      value: value\n    }\n  },\n  handleChange: function(value, formattedValue) {\n    this.setState({\n      value: value, // ISO String, ex: \"2016-11-19T12:00:00.000Z\"\n      formattedValue: formattedValue // Formatted String, ex: \"11/19/2016\"\n    });\n  },\n  componentDidUpdate: function(){\n    // Access ISO String and formatted values from the DOM.\n    var hiddenInputElement = document.getElementById(\"example-datepicker\");\n    console.log(hiddenInputElement.value); // ISO String, ex: \"2016-11-19T12:00:00.000Z\"\n    console.log(hiddenInputElement.getAttribute('data-formattedvalue')) // Formatted String, ex: \"11/19/2016\"\n  },\n  render: function(){\n    return <FormGroup>\n      <ControlLabel>Label</ControlLabel>\n      <DatePicker id=\"example-datepicker\" value={this.state.value} onChange={this.handleChange} />\n      <HelpBlock>Help</HelpBlock>\n    </FormGroup>;\n  }\n});\n\n```\n\n## API Reference\n\n### `<DatePicker />`\n\nDatePicker component. Renders as a [React-Bootstrap InputGroup](https://react-bootstrap.github.io/components.html#forms-input-groups).\n\n[InputGroup](https://react-bootstrap.github.io/components.html#forms-input-groups) properties are passed through to the input group.\n\n* **Properties:**\n  * `value` - ISO date string representing the current value.\n    * **Optional**\n    * **Type:** `string`\n    * **Example:** `\"2016-05-19T12:00:00.000Z\"`\n  * `defaultValue` - ISO date string representing the default value. Cannot be set with 'value'.\n    * **Optional**\n    * **Type:** `string`\n    * **Example:** `\"2016-05-19T12:00:00.000Z\"`\n  * `minDate` - ISO date string to set the lowest allowable date value.\n    * **Optional**\n    * **Type:** `string`\n    * **Example:** `\"2016-05-19T12:00:00.000Z\"`\n  * `maxDate` - ISO date string to set the highest allowable date value.\n    * **Optional**\n    * **Type:** `string`\n    * **Example:** `\"2016-05-19T12:00:00.000Z\"`\n  * `style` - Style object passed to the `FormControl` input element.\n    * **Optional**\n    * **Type:** `object`\n    * **Example:** `{width: \"100%\"}`\n  * `className` - Class name passed to the `FormControl` input element.\n    * **Optional**\n    * **Type:** `string`\n    * **Example:** `example-class`\n  * `autoComplete` - autoComplete attribute passed to the `FormControl` input element.\n    * **Optional**\n    * **Type:** `string`\n    * **Example:** `off`\n  * `autoFocus` - Whether or not component starts with focus.\n    * **Optional**\n    * **Type:** `bool`\n    * **Example:** `false`\n  * `disabled` - Whether or not component is disabled.\n    * **Optional**\n    * **Type:** `bool`\n    * **Example:** `false`\n  * `onChange` - Focus callback function.\n    * **Optional**\n    * **Type:** `function`\n    * **Callback Arguments:**\n      * `value` - ISO date string representing the selected value.\n        * **Type:** `String`\n        * **Example:** `\"2016-05-19T12:00:00.000Z\"`\n      * `formattedValue` - String representing the formatted value as defined by the `dateFormat` property.\n        * **Type:** `String`\n        * **Example:** `\"05/19/2016\"`\n  * `onFocus` - Focus callback function.\n    * **Optional**\n    * **Type:** `function`\n    * **Callback Arguments:**\n      * `event` - Focus event.\n        * **Type:** `Event`\n  * `onBlur` - Blur callback function.\n    * **Optional**\n    * **Type:** `function`\n    * **Callback Arguments:**\n      * `event` - Blur event.\n        * **Type:** `Event`\n  * `dateFormat` - Date format. Any combination of DD, MM, YYYY and separator.\n    * **Optional**\n    * **Type:** `string`\n    * **Examples:** `\"MM/DD/YYYY\"`, `\"YYYY/MM/DD\"`, `\"MM-DD-YYYY\"`, or `\"DD MM YYYY\"`\n  * `clearButtonElement` - Character or component to use for the clear button.\n    * **Optional**\n    * **Type:** `string` or `ReactClass`\n    * **Example:** `\"×\"`\n  * `showClearButton` - Toggles the visibility of the clearButton\n    * **Optional**\n    * **Type:** `bool`\n    * **Example:** `false`\n  * `onClear` - Defines what happens when clear button is clicked.\n    * **Optional**\n    * **Type:** `function`\n  * `previousButtonElement` - Character or component to use for the calendar's previous button.\n    * **Optional**\n    * **Type:** `string` or `ReactClass`\n    * **Example:** `\"<\"`\n  * `nextButtonElement` - Character or component to use for the calendar's next button.\n    * **Optional**\n    * **Type:** `string` or `ReactClass`\n    * **Example:** `\">\"`\n  * `cellPadding` - CSS padding value for calendar date cells.\n    * **Optional**\n    * **Type:** `string`\n    * **Example:** `\"2px\"`\n  * `dayLabels` - Array of day names to use in the calendar. Starting on Sunday.\n    * **Optional**\n    * **Type:** `array`\n    * **Example:** `['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']`\n  * `monthLabels` - Array of month names to use in the calendar.\n    * **Optional**\n    * **Type:** `array`\n    * **Example:** `['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']`\n  * `calendarPlacement` - Overlay placement for the popover calendar.\n    * **Optional**\n    * **Type:** `string` or `function`\n    * **Example:** `\"top\"`\n  * `calendarContainer` - Overlay container for the popover calendar. When placing the date-picker in a scrolling container, set this prop to some ancestor of the scrolling container.\n    * **Optional**\n    * **Type:** A DOM element or a component\n    * **Example:** `document.body`\n  * `weekStartsOnMonday` - **OBSOLETE** use `weekStartsOn`\n  * `weekStartsOn` - Makes the calendar's week to start on a specified day. 0 = Sunday, 1 = Monday, etc.\n    * **Optional**\n    * **Type:** `number`\n    * **Example:** `4`\n  * `showTodayButton` - Toggles the visibility of the today-button.\n    * **Optional**\n    * **Type:** `boolean`\n    * **Example:** `false`\n  * `todayButtonLabel` - Label for the today-button\n    * **Optional**\n    * **Type:** `string`\n    * **Example:** `\"Today\"`\n  * `customControl` - Overwrite the default `FormControl` component with your own component.\n    * **Optional**\n    * **Type:** `React.Component`\n    * **Example:** `<CustomControl />`\n\n* **Methods:**\n\n## Tests\n\n### Browser Coverage\n\n[Karma](http://karma-runner.github.io/0.13/index.html) tests are performed on [Browserstack](https://www.browserstack.com/) in the following browsers:\n\n* IE 9, Windows 7\n* IE 10, Windows 7\n* IE 11, Windows 7\n* Opera (latest version), Windows 7\n* Firefox (latest version), Windows 7\n* Chrome (latest version), Windows 7\n* Safari (latest version), OSX Yosemite\n* Mobile Safari (latest version), iPhone 6, iOS 8.3\n\nPlease [let us know](https://github.com/pushtell/react-bootstrap-date-picker/issues/new) if a different configuration should be included here.\n\n### Running Tests\n\nLocally:\n\n```bash\n\nnpm test\n\n```\n\nOn [Browserstack](https://www.browserstack.com/):\n\n```bash\n\nBROWSERSTACK_USERNAME=YOUR_USERNAME BROWSERSTACK_ACCESS_KEY=YOUR_ACCESS_KEY npm test\n\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pushtell/react-bootstrap-date-picker.git"
  },
  "scripts": {
    "build": "doctoc . --github --title '<h1>Table of Contents</h1>'; ./node_modules/babel-cli/bin/babel.js ./src --plugins add-module-exports --out-dir ./lib;",
    "example": "./node_modules/webpack-dev-server/bin/webpack-dev-server.js --content-base example/ --config ./example/webpack.example.config.js",
    "gh-pages": "./node_modules/webpack/bin/webpack.js --config ./example/webpack.example.config.js; cp ./example/index.html /tmp/index.html; cp ./example/bundle.js /tmp/bundle.js; git checkout gh-pages; cp /tmp/index.html ./index.html; cp /tmp/bundle.js ./bundle.js; chmod -x .git/hooks/pre-commit .git/hooks/post-commit; git commit -a -m 'Automatic Example Update'; git push origin gh-pages; chmod +x .git/hooks/pre-commit .git/hooks/post-commit; git checkout master;",
    "lint": "eslint --fix ./src/**",
    "test": "./node_modules/karma/bin/karma start test/karma.conf.js"
  },
  "version": "5.1.0"
}
